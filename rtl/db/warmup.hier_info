|hu3
overflow <= ula_k:inst4.overflow
clock => Interface_Control:inst1.clock
clock => uart:inst.clk
reset => Interface_Control:inst1.reset
rx => uart:inst.rx
result_alu[0] <= ula_k:inst4.result_alu[0]
result_alu[1] <= ula_k:inst4.result_alu[1]
result_alu[2] <= ula_k:inst4.result_alu[2]
result_alu[3] <= ula_k:inst4.result_alu[3]
result_alu[4] <= ula_k:inst4.result_alu[4]
result_alu[5] <= ula_k:inst4.result_alu[5]
result_alu[6] <= ula_k:inst4.result_alu[6]
result_alu[7] <= ula_k:inst4.result_alu[7]


|hu3|ula_k:inst4
operator1[0] => Div0.IN7
operator1[0] => Mult0.IN7
operator1[0] => result_alu~9.IN0
operator1[0] => result_alu~1.IN0
operator1[0] => Add1.IN16
operator1[0] => Add0.IN8
operator1[1] => Div0.IN6
operator1[1] => Mult0.IN6
operator1[1] => result_alu~10.IN0
operator1[1] => result_alu~2.IN0
operator1[1] => Add1.IN15
operator1[1] => Add0.IN7
operator1[2] => Div0.IN5
operator1[2] => Mult0.IN5
operator1[2] => result_alu~11.IN0
operator1[2] => result_alu~3.IN0
operator1[2] => Add1.IN14
operator1[2] => Add0.IN6
operator1[3] => Div0.IN4
operator1[3] => Mult0.IN4
operator1[3] => result_alu~12.IN0
operator1[3] => result_alu~4.IN0
operator1[3] => Add1.IN13
operator1[3] => Add0.IN5
operator1[4] => Div0.IN3
operator1[4] => Mult0.IN3
operator1[4] => result_alu~13.IN0
operator1[4] => result_alu~5.IN0
operator1[4] => Add1.IN12
operator1[4] => Add0.IN4
operator1[5] => Div0.IN2
operator1[5] => Mult0.IN2
operator1[5] => result_alu~14.IN0
operator1[5] => result_alu~6.IN0
operator1[5] => Add1.IN11
operator1[5] => Add0.IN3
operator1[6] => Div0.IN1
operator1[6] => Mult0.IN1
operator1[6] => result_alu~15.IN0
operator1[6] => result_alu~7.IN0
operator1[6] => Add1.IN10
operator1[6] => Add0.IN2
operator1[7] => Div0.IN0
operator1[7] => Mult0.IN0
operator1[7] => result_alu~16.IN0
operator1[7] => result_alu~8.IN0
operator1[7] => Add1.IN9
operator1[7] => Add0.IN1
operator2[0] => Div0.IN15
operator2[0] => Mult0.IN15
operator2[0] => result_alu~9.IN1
operator2[0] => result_alu~1.IN1
operator2[0] => Add0.IN16
operator2[0] => Add1.IN8
operator2[0] => Equal4.IN24
operator2[1] => Div0.IN14
operator2[1] => Mult0.IN14
operator2[1] => result_alu~10.IN1
operator2[1] => result_alu~2.IN1
operator2[1] => Add0.IN15
operator2[1] => Add1.IN7
operator2[1] => Equal4.IN25
operator2[2] => Div0.IN13
operator2[2] => Mult0.IN13
operator2[2] => result_alu~11.IN1
operator2[2] => result_alu~3.IN1
operator2[2] => Add0.IN14
operator2[2] => Add1.IN6
operator2[2] => Equal4.IN26
operator2[3] => Div0.IN12
operator2[3] => Mult0.IN12
operator2[3] => result_alu~12.IN1
operator2[3] => result_alu~4.IN1
operator2[3] => Add0.IN13
operator2[3] => Add1.IN5
operator2[3] => Equal4.IN27
operator2[4] => Div0.IN11
operator2[4] => Mult0.IN11
operator2[4] => result_alu~13.IN1
operator2[4] => result_alu~5.IN1
operator2[4] => Add0.IN12
operator2[4] => Add1.IN4
operator2[4] => Equal4.IN28
operator2[5] => Div0.IN10
operator2[5] => Mult0.IN10
operator2[5] => result_alu~14.IN1
operator2[5] => result_alu~6.IN1
operator2[5] => Add0.IN11
operator2[5] => Add1.IN3
operator2[5] => Equal4.IN29
operator2[6] => Div0.IN9
operator2[6] => Mult0.IN9
operator2[6] => result_alu~15.IN1
operator2[6] => result_alu~7.IN1
operator2[6] => Add0.IN10
operator2[6] => Add1.IN2
operator2[6] => Equal4.IN30
operator2[7] => Div0.IN8
operator2[7] => Mult0.IN8
operator2[7] => result_alu~16.IN1
operator2[7] => result_alu~8.IN1
operator2[7] => Add0.IN9
operator2[7] => Add1.IN1
operator2[7] => Equal4.IN31
operation_alu[0] => Decoder0.IN7
operation_alu[0] => Equal0.IN24
operation_alu[0] => Equal1.IN0
operation_alu[0] => Equal2.IN25
operation_alu[0] => Equal3.IN0
operation_alu[1] => Decoder0.IN6
operation_alu[1] => Equal0.IN25
operation_alu[1] => Equal1.IN25
operation_alu[1] => Equal2.IN26
operation_alu[1] => Equal3.IN26
operation_alu[2] => Decoder0.IN5
operation_alu[2] => Equal0.IN26
operation_alu[2] => Equal1.IN26
operation_alu[2] => Equal2.IN0
operation_alu[2] => Equal3.IN1
operation_alu[3] => Decoder0.IN4
operation_alu[3] => Equal0.IN27
operation_alu[3] => Equal1.IN27
operation_alu[3] => Equal2.IN27
operation_alu[3] => Equal3.IN27
operation_alu[4] => Decoder0.IN3
operation_alu[4] => Equal0.IN28
operation_alu[4] => Equal1.IN28
operation_alu[4] => Equal2.IN28
operation_alu[4] => Equal3.IN28
operation_alu[5] => Decoder0.IN2
operation_alu[5] => Equal0.IN29
operation_alu[5] => Equal1.IN29
operation_alu[5] => Equal2.IN29
operation_alu[5] => Equal3.IN29
operation_alu[6] => Decoder0.IN1
operation_alu[6] => Equal0.IN30
operation_alu[6] => Equal1.IN30
operation_alu[6] => Equal2.IN30
operation_alu[6] => Equal3.IN30
operation_alu[7] => Decoder0.IN0
operation_alu[7] => Equal0.IN31
operation_alu[7] => Equal1.IN31
operation_alu[7] => Equal2.IN31
operation_alu[7] => Equal3.IN31
result_alu[0] <= result_alu[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
result_alu[1] <= result_alu[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
result_alu[2] <= result_alu[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
result_alu[3] <= result_alu[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
result_alu[4] <= result_alu[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
result_alu[5] <= result_alu[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
result_alu[6] <= result_alu[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
result_alu[7] <= result_alu[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
overflow <= always0~8.DB_MAX_OUTPUT_PORT_TYPE


|hu3|Interface_Control:inst1
clock => counter[1].CLK
clock => counter[0].CLK
clock => rx_dataA[7]~reg0.CLK
clock => rx_dataA[6]~reg0.CLK
clock => rx_dataA[5]~reg0.CLK
clock => rx_dataA[4]~reg0.CLK
clock => rx_dataA[3]~reg0.CLK
clock => rx_dataA[2]~reg0.CLK
clock => rx_dataA[1]~reg0.CLK
clock => rx_dataA[0]~reg0.CLK
clock => rx_dataB[7]~reg0.CLK
clock => rx_dataB[6]~reg0.CLK
clock => rx_dataB[5]~reg0.CLK
clock => rx_dataB[4]~reg0.CLK
clock => rx_dataB[3]~reg0.CLK
clock => rx_dataB[2]~reg0.CLK
clock => rx_dataB[1]~reg0.CLK
clock => rx_dataB[0]~reg0.CLK
clock => rx_dataOperation[7]~reg0.CLK
clock => rx_dataOperation[6]~reg0.CLK
clock => rx_dataOperation[5]~reg0.CLK
clock => rx_dataOperation[4]~reg0.CLK
clock => rx_dataOperation[3]~reg0.CLK
clock => rx_dataOperation[2]~reg0.CLK
clock => rx_dataOperation[1]~reg0.CLK
clock => rx_dataOperation[0]~reg0.CLK
clock => dataA[7].CLK
clock => dataA[6].CLK
clock => dataA[5].CLK
clock => dataA[4].CLK
clock => dataA[3].CLK
clock => dataA[2].CLK
clock => dataA[1].CLK
clock => dataA[0].CLK
clock => operation[7].CLK
clock => operation[6].CLK
clock => operation[5].CLK
clock => operation[4].CLK
clock => operation[3].CLK
clock => operation[2].CLK
clock => operation[1].CLK
clock => operation[0].CLK
reset => counter~9.OUTPUTSELECT
reset => counter~8.OUTPUTSELECT
reset => rx_dataB~23.OUTPUTSELECT
reset => rx_dataB~22.OUTPUTSELECT
reset => rx_dataB~21.OUTPUTSELECT
reset => rx_dataB~20.OUTPUTSELECT
reset => rx_dataB~19.OUTPUTSELECT
reset => rx_dataB~18.OUTPUTSELECT
reset => rx_dataB~17.OUTPUTSELECT
reset => rx_dataB~16.OUTPUTSELECT
reset => rx_dataA~23.OUTPUTSELECT
reset => rx_dataA~22.OUTPUTSELECT
reset => rx_dataA~21.OUTPUTSELECT
reset => rx_dataA~20.OUTPUTSELECT
reset => rx_dataA~19.OUTPUTSELECT
reset => rx_dataA~18.OUTPUTSELECT
reset => rx_dataA~17.OUTPUTSELECT
reset => rx_dataA~16.OUTPUTSELECT
reset => rx_dataOperation~23.OUTPUTSELECT
reset => rx_dataOperation~22.OUTPUTSELECT
reset => rx_dataOperation~21.OUTPUTSELECT
reset => rx_dataOperation~20.OUTPUTSELECT
reset => rx_dataOperation~19.OUTPUTSELECT
reset => rx_dataOperation~18.OUTPUTSELECT
reset => rx_dataOperation~17.OUTPUTSELECT
reset => rx_dataOperation~16.OUTPUTSELECT
rx_data_ready => rx_dataOperation~15.OUTPUTSELECT
rx_data_ready => rx_dataOperation~14.OUTPUTSELECT
rx_data_ready => rx_dataOperation~13.OUTPUTSELECT
rx_data_ready => rx_dataOperation~12.OUTPUTSELECT
rx_data_ready => rx_dataOperation~11.OUTPUTSELECT
rx_data_ready => rx_dataOperation~10.OUTPUTSELECT
rx_data_ready => rx_dataOperation~9.OUTPUTSELECT
rx_data_ready => rx_dataOperation~8.OUTPUTSELECT
rx_data_ready => rx_dataB~15.OUTPUTSELECT
rx_data_ready => rx_dataB~14.OUTPUTSELECT
rx_data_ready => rx_dataB~13.OUTPUTSELECT
rx_data_ready => rx_dataB~12.OUTPUTSELECT
rx_data_ready => rx_dataB~11.OUTPUTSELECT
rx_data_ready => rx_dataB~10.OUTPUTSELECT
rx_data_ready => rx_dataB~9.OUTPUTSELECT
rx_data_ready => rx_dataB~8.OUTPUTSELECT
rx_data_ready => rx_dataA~15.OUTPUTSELECT
rx_data_ready => rx_dataA~14.OUTPUTSELECT
rx_data_ready => rx_dataA~13.OUTPUTSELECT
rx_data_ready => rx_dataA~12.OUTPUTSELECT
rx_data_ready => rx_dataA~11.OUTPUTSELECT
rx_data_ready => rx_dataA~10.OUTPUTSELECT
rx_data_ready => rx_dataA~9.OUTPUTSELECT
rx_data_ready => rx_dataA~8.OUTPUTSELECT
rx_data_ready => counter~7.OUTPUTSELECT
rx_data_ready => counter~6.OUTPUTSELECT
rx_data_ready => operation[0].ENA
rx_data_ready => operation[1].ENA
rx_data_ready => operation[2].ENA
rx_data_ready => operation[3].ENA
rx_data_ready => operation[4].ENA
rx_data_ready => operation[5].ENA
rx_data_ready => operation[6].ENA
rx_data_ready => operation[7].ENA
rx_data_ready => dataA[0].ENA
rx_data_ready => dataA[1].ENA
rx_data_ready => dataA[2].ENA
rx_data_ready => dataA[3].ENA
rx_data_ready => dataA[4].ENA
rx_data_ready => dataA[5].ENA
rx_data_ready => dataA[6].ENA
rx_data_ready => dataA[7].ENA
rx_data[0] => operation~7.DATAB
rx_data[0] => dataA~7.DATAB
rx_data[0] => rx_dataB~7.DATAB
rx_data[1] => operation~6.DATAB
rx_data[1] => dataA~6.DATAB
rx_data[1] => rx_dataB~6.DATAB
rx_data[2] => operation~5.DATAB
rx_data[2] => dataA~5.DATAB
rx_data[2] => rx_dataB~5.DATAB
rx_data[3] => operation~4.DATAB
rx_data[3] => dataA~4.DATAB
rx_data[3] => rx_dataB~4.DATAB
rx_data[4] => operation~3.DATAB
rx_data[4] => dataA~3.DATAB
rx_data[4] => rx_dataB~3.DATAB
rx_data[5] => operation~2.DATAB
rx_data[5] => dataA~2.DATAB
rx_data[5] => rx_dataB~2.DATAB
rx_data[6] => operation~1.DATAB
rx_data[6] => dataA~1.DATAB
rx_data[6] => rx_dataB~1.DATAB
rx_data[7] => operation~0.DATAB
rx_data[7] => dataA~0.DATAB
rx_data[7] => rx_dataB~0.DATAB
rx_dataOperation[0] <= rx_dataOperation[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataOperation[1] <= rx_dataOperation[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataOperation[2] <= rx_dataOperation[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataOperation[3] <= rx_dataOperation[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataOperation[4] <= rx_dataOperation[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataOperation[5] <= rx_dataOperation[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataOperation[6] <= rx_dataOperation[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataOperation[7] <= rx_dataOperation[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataA[0] <= rx_dataA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataA[1] <= rx_dataA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataA[2] <= rx_dataA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataA[3] <= rx_dataA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataA[4] <= rx_dataA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataA[5] <= rx_dataA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataA[6] <= rx_dataA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataA[7] <= rx_dataA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataB[0] <= rx_dataB[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataB[1] <= rx_dataB[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataB[2] <= rx_dataB[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataB[3] <= rx_dataB[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataB[4] <= rx_dataB[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataB[5] <= rx_dataB[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataB[6] <= rx_dataB[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_dataB[7] <= rx_dataB[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|hu3|uart:inst
clk => \tx_clk_gen:counter[12].CLK
clk => \tx_clk_gen:counter[11].CLK
clk => \tx_clk_gen:counter[10].CLK
clk => \tx_clk_gen:counter[9].CLK
clk => \tx_clk_gen:counter[8].CLK
clk => \tx_clk_gen:counter[7].CLK
clk => \tx_clk_gen:counter[6].CLK
clk => \tx_clk_gen:counter[5].CLK
clk => \tx_clk_gen:counter[4].CLK
clk => \tx_clk_gen:counter[3].CLK
clk => \tx_clk_gen:counter[2].CLK
clk => \tx_clk_gen:counter[1].CLK
clk => \tx_clk_gen:counter[0].CLK
clk => tx_clk_en.CLK
clk => tx_end~reg0.CLK
clk => tx~reg0.CLK
clk => tx_data_tmp[7].CLK
clk => tx_data_tmp[6].CLK
clk => tx_data_tmp[5].CLK
clk => tx_data_tmp[4].CLK
clk => tx_data_tmp[3].CLK
clk => tx_data_tmp[2].CLK
clk => tx_data_tmp[1].CLK
clk => tx_data_tmp[0].CLK
clk => tx_data_cnt[2].CLK
clk => tx_data_cnt[1].CLK
clk => tx_data_cnt[0].CLK
clk => tx_par_bit.CLK
clk => \rx_debounceer:deb_buf[3].CLK
clk => \rx_debounceer:deb_buf[2].CLK
clk => \rx_debounceer:deb_buf[1].CLK
clk => \rx_debounceer:deb_buf[0].CLK
clk => rx_data_deb.CLK
clk => \rx_start_detect:rx_data_old.CLK
clk => rx_rcv_init.CLK
clk => \rx_clk_gen:counter[12].CLK
clk => \rx_clk_gen:counter[11].CLK
clk => \rx_clk_gen:counter[10].CLK
clk => \rx_clk_gen:counter[9].CLK
clk => \rx_clk_gen:counter[8].CLK
clk => \rx_clk_gen:counter[7].CLK
clk => \rx_clk_gen:counter[6].CLK
clk => \rx_clk_gen:counter[5].CLK
clk => \rx_clk_gen:counter[4].CLK
clk => \rx_clk_gen:counter[3].CLK
clk => \rx_clk_gen:counter[2].CLK
clk => \rx_clk_gen:counter[1].CLK
clk => \rx_clk_gen:counter[0].CLK
clk => rx_clk_en.CLK
clk => rx_ready~reg0.CLK
clk => rx_par_bit.CLK
clk => rx_data_cnt[2].CLK
clk => rx_data_cnt[1].CLK
clk => rx_data_cnt[0].CLK
clk => rx_data[7]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data_tmp[6].CLK
clk => rx_data_tmp[5].CLK
clk => rx_data_tmp[4].CLK
clk => rx_data_tmp[3].CLK
clk => rx_data_tmp[2].CLK
clk => rx_data_tmp[1].CLK
clk => rx_data_tmp[0].CLK
rst => rx_data_cnt~6.OUTPUTSELECT
rst => rx_data_cnt~5.OUTPUTSELECT
rst => rx_data_cnt~4.OUTPUTSELECT
rst => rx_data_tmp~20.OUTPUTSELECT
rst => rx_data_tmp~19.OUTPUTSELECT
rst => rx_data_tmp~18.OUTPUTSELECT
rst => rx_data_tmp~17.OUTPUTSELECT
rst => rx_data_tmp~16.OUTPUTSELECT
rst => rx_data_tmp~15.OUTPUTSELECT
rst => rx_data_tmp~14.OUTPUTSELECT
rst => rx_data~23.OUTPUTSELECT
rst => rx_data~22.OUTPUTSELECT
rst => rx_data~21.OUTPUTSELECT
rst => rx_data~20.OUTPUTSELECT
rst => rx_data~19.OUTPUTSELECT
rst => rx_data~18.OUTPUTSELECT
rst => rx_data~17.OUTPUTSELECT
rst => rx_data~16.OUTPUTSELECT
rst => rx_ready~2.OUTPUTSELECT
rst => rx_fsm~14.OUTPUTSELECT
rst => rx_fsm~13.OUTPUTSELECT
rst => rx_fsm~12.OUTPUTSELECT
rst => rx_fsm~11.OUTPUTSELECT
rst => rx_fsm~10.OUTPUTSELECT
rst => counter~51.OUTPUTSELECT
rst => counter~50.OUTPUTSELECT
rst => counter~49.OUTPUTSELECT
rst => counter~48.OUTPUTSELECT
rst => counter~47.OUTPUTSELECT
rst => counter~46.OUTPUTSELECT
rst => counter~45.OUTPUTSELECT
rst => counter~44.OUTPUTSELECT
rst => counter~43.OUTPUTSELECT
rst => counter~42.OUTPUTSELECT
rst => counter~41.OUTPUTSELECT
rst => counter~40.OUTPUTSELECT
rst => counter~39.OUTPUTSELECT
rst => rx_clk_en~0.OUTPUTSELECT
rst => rx_rcv_init~0.OUTPUTSELECT
rst => rx_data_old~0.OUTPUTSELECT
rst => tx_data_cnt~8.OUTPUTSELECT
rst => tx_data_cnt~7.OUTPUTSELECT
rst => tx_data_cnt~6.OUTPUTSELECT
rst => tx_data_tmp~23.OUTPUTSELECT
rst => tx_data_tmp~22.OUTPUTSELECT
rst => tx_data_tmp~21.OUTPUTSELECT
rst => tx_data_tmp~20.OUTPUTSELECT
rst => tx_data_tmp~19.OUTPUTSELECT
rst => tx_data_tmp~18.OUTPUTSELECT
rst => tx_data_tmp~17.OUTPUTSELECT
rst => tx_data_tmp~16.OUTPUTSELECT
rst => tx_par_bit~2.OUTPUTSELECT
rst => tx_fsm~16.OUTPUTSELECT
rst => tx_fsm~15.OUTPUTSELECT
rst => tx_fsm~14.OUTPUTSELECT
rst => tx_fsm~13.OUTPUTSELECT
rst => tx_fsm~12.OUTPUTSELECT
rst => counter~25.OUTPUTSELECT
rst => counter~24.OUTPUTSELECT
rst => counter~23.OUTPUTSELECT
rst => counter~22.OUTPUTSELECT
rst => counter~21.OUTPUTSELECT
rst => counter~20.OUTPUTSELECT
rst => counter~19.OUTPUTSELECT
rst => counter~18.OUTPUTSELECT
rst => counter~17.OUTPUTSELECT
rst => counter~16.OUTPUTSELECT
rst => counter~15.OUTPUTSELECT
rst => counter~14.OUTPUTSELECT
rst => counter~13.OUTPUTSELECT
rst => tx_clk_en~0.OUTPUTSELECT
rx => \rx_debounceer:deb_buf[0].DATAIN
rx => rx_proc~0.IN1
rx => rx_data_tmp~6.DATAA
rx => rx_data~0.DATAB
rx => rx_par_bit~0.IN1
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
par_en => rx_fsm~7.DATAB
par_en => rx_par_bit~1.OUTPUTSELECT
par_en => tx_fsm~7.DATAB
par_en => tx_fsm~8.DATAB
par_en => rx_fsm~5.DATAB
par_en => rx_ready~0.DATAB
tx_req => tx_par_bit~0.OUTPUTSELECT
tx_req => tx_data_cnt~2.OUTPUTSELECT
tx_req => tx_data_cnt~1.OUTPUTSELECT
tx_req => tx_data_cnt~0.OUTPUTSELECT
tx_req => tx_fsm~4.OUTPUTSELECT
tx_req => tx_fsm~3.OUTPUTSELECT
tx_req => tx_fsm~2.OUTPUTSELECT
tx_req => tx_fsm~1.OUTPUTSELECT
tx_req => tx_fsm~0.OUTPUTSELECT
tx_req => tx_data_tmp~7.OUTPUTSELECT
tx_req => tx_data_tmp~6.OUTPUTSELECT
tx_req => tx_data_tmp~5.OUTPUTSELECT
tx_req => tx_data_tmp~4.OUTPUTSELECT
tx_req => tx_data_tmp~3.OUTPUTSELECT
tx_req => tx_data_tmp~2.OUTPUTSELECT
tx_req => tx_data_tmp~1.OUTPUTSELECT
tx_req => tx_data_tmp~0.OUTPUTSELECT
tx_req => Selector0.IN1
tx_end <= tx_end~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data[0] => tx_data_tmp~7.DATAB
tx_data[1] => tx_data_tmp~6.DATAB
tx_data[2] => tx_data_tmp~5.DATAB
tx_data[3] => tx_data_tmp~4.DATAB
tx_data[4] => tx_data_tmp~3.DATAB
tx_data[5] => tx_data_tmp~2.DATAB
tx_data[6] => tx_data_tmp~1.DATAB
tx_data[7] => tx_data_tmp~0.DATAB
rx_ready <= rx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


